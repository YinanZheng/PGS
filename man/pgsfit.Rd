% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/PGS.R
\name{pgsfit}
\alias{pgsfit}
\title{Penalized Generalized Estimation Equation with Grid Search}
\usage{
pgsfit(y.vect, id.vect, M, COV = NULL, preRank.vect, Pm.vect, lam.vect,
  fold = 10, eps = 1e-05, iter.n = 50, corstr = "ar1",
  parallel = TRUE, ncore = detectCores(), seed = NULL)
}
\arguments{
\item{y.vect}{a vector of dependent variable.}

\item{id.vect}{a vector of subjuect ID.}

\item{M}{a data frame or matrix of genomic dataset. Rows represent samples, columns represent genomic marks.}

\item{COV}{a data frame or matrix of covariates dataset.}

\item{preRank.vect}{a vector of strings specifying pre-ranked names of genomic marks. see \code{preRank}.}

\item{Pm.vect}{a numeric vector of tunning parameter Pm, which specifies the number of top ranking genomic marks.}

\item{lam.vect}{a numeric vector of tunning parameter lambda, which specifies the penalty parameter.}

\item{fold}{k-fold cross-validation in calculating grid error. Default = 10.}

\item{eps}{convergence threshold. By default iteration stops when beta estimation error <1e-5}

\item{iter.n}{maximum iteration number. Iteration will stop anyway even if the \code{eps} is not met. Default = 50.}

\item{corstr}{a character string specifying the working correlation structure. The following are permitted: independence (\code{"indep"}), exchangeable (\code{"exch"}), autoregressive(1) (\code{"ar1"}), and unstructured (\code{"un"}). Default = \code{"ar1"}.}

\item{parallel}{logical. enable parallel computing feature? Default = \code{TRUE}.}

\item{ncore}{number of cores to run parallel computation. Effective when \code{parallel} = \code{TRUE}. By default, max number of cores will be used.}

\item{seed}{an integer specifying seed for cross-validation. If not specified \code{pgsfit} will generate one.}
}
\value{
Fitting and variable penalization results; a list object \code{pgsobj} consisting of:
  \item{coefficients}{estimates (shrinked) from the best model}
  \item{grid.err}{cross-validation error grid}
  \item{lam.sel.vect}{vector of selected lambda}
  \item{flag.stop.corr}{estimation error when iteration stop}
  \item{iter.n.corr}{iteration times}
  \item{Pm.vect}{working vector of tunning parameter Pm}
  \item{lam.vect}{working vector of tunning parameter lambda}
}
\description{
\code{pgsfit} is used to fit and determine the best results from penalized GEE method across pre-specified tunning parameter grid.
}
\examples{
### Dataset preview
BJdata()

### Convert binary variables into factor type
BJlung$gender = factor(BJlung$gender)
BJlung$heat = factor(BJlung$heat)
BJlung$cigwear = factor(BJlung$cigwear)

### Merge miRNA and lung function dataset
BJdata <- merge(BJmirna, BJlung, by=c("SID","WD"))

### Data must be sorted by study subject ID and multiple measurements indicator
BJdata <- BJdata[with(BJdata, order(SID, WD)), ]

### Extract dependent variable (lung function)
y.vect<-BJdata$FEV1

### Extract subjuect ID variable indicating repeated measures
id.vect<-BJdata$SID

### Extract microRNA data matrix
M<-BJdata[,3:168]

### Extract covariate data matrix
COV<-BJdata[,170:179]

### In the example we use linear mixed-effect model (default) for pre-ranking, ranked by p-values
prerank_LMM_par = preRank(y.vect, id.vect, M, COV)
preRank.vect = prerank_LMM_par

### Initiate Pm sequence: Number of top ranking genomic marks
(Pm.vect<-c(seq(10,160,10)))

### Initiate lambda sequence: Penalty parameter
(lam.vect<-seq(0.02, 0.3, 0.02))

### If your computer have multiple cores, it is recommended to enable parallel option (default)
PGSfit = pgsfit(y.vect, id.vect, M, COV, preRank.vect, Pm.vect, lam.vect, seed = 2015)
}
\seealso{
see \code{\link{preRank}} to obtain proper ranked genomic marks. see \code{\link{plotGrid}} to visualize and diagnose fitting results.
}

