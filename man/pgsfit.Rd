% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgsfit.R
\name{pgsfit}
\alias{pgsfit}
\title{Penalized Generalized Estimation Equation with Grid Search}
\usage{
pgsfit(y.vect, id.vect, M, COV = NULL, sis.obj, lambda.n = 30,
  lambda.lim = c(2, 5), pm.n = 10, pm.max = NULL, fold = 10,
  nonzero.eps = 1e-05, eps = 1e-05, iter.n = 50, corstr = "ar1",
  parallel = TRUE, ncore = detectCores(), seed = NULL)
}
\arguments{
\item{y.vect}{a vector of dependent variable.}

\item{id.vect}{a vector of subjuect ID.}

\item{M}{a data frame or matrix of genomic dataset. Rows represent samples, columns represent variables.}

\item{COV}{a data frame or matrix of covariates dataset.}

\item{sis.obj}{a \code{sis} object. See \code{\link{sis}}.}

\item{lambda.n}{an integer specifying the number of tunning parameter lambda, the range of lambda is specifyied by \code{lambda.lim}. Default = 30.}

\item{lambda.lim}{a vector with two numbers specifying the limit of changing lambda for PGS to tune lambda. The lambda sequence is generated by \code{exp(-seq(lambda.lim[1], lambda.lim[2], length = lambda.n))}. Default = c(2,5).}

\item{pm.n}{an integer specifying the number of Pm levels, starting from 10 to \code{pm.n}. Default = 10. Pm is the number of top ranking variables from \code{\link{sis}}.}

\item{pm.max}{an integer specifying the maximum Pm. Default = \code{NULL}. If \code{NULL}, \code{n/log10(n)} will be used (n is the number of total observations).}

\item{fold}{k-fold cross-validation in calculating grid error. Default = 10.}

\item{nonzero.eps}{non-zero beta threshold. During iteration, if beta estimation is shrinked down below this threshold, it will be forced to be zero. Default = \code{1e-5}.}

\item{eps}{convergence threshold. Iteration stops when the sum of beta estimation errors less than this threshold. Default = \code{1e-5}.}

\item{iter.n}{maximum iteration number. Iteration will stop anyway even if the \code{eps} is not met and throw a warning. Default = 50.}

\item{corstr}{a character string specifying the working correlation structure. The following are permitted: independence (\code{"indep"}), exchangeable (\code{"exch"}), autoregressive(1) (\code{"ar1"}), and unstructured (\code{"un"}). Default = \code{"ar1"}.}

\item{parallel}{logical. Enable parallel computing feature. Default = \code{TRUE}.}

\item{ncore}{number of cores to run parallel computation. Effective when \code{parallel} = \code{TRUE}. By default, max number of cores will be used.}

\item{seed}{an integer specifying seed for cross-validation. If not specified \code{pgsfit} will generate one.}
}
\value{
variables selection and model fitting results in a \code{\link{pgsfit.obj}} object.
}
\description{
\code{pgsfit} is used to fit and determine the best results from penalized GEE method across tunning parameter grid.
}
\examples{
### Dataset preview
BJdata()

### Convert binary variables into factor type
BJlung$gender = factor(BJlung$gender)
BJlung$heat = factor(BJlung$heat)
BJlung$cigwear = factor(BJlung$cigwear)

### Merge miRNA and lung function dataset
BJdata <- merge(BJmirna, BJlung, by=c("SID","WD"))

### Data must be sorted by study subject ID and multiple measurements indicator
BJdata <- BJdata[with(BJdata, order(SID, WD)), ]

### Extract dependent variable (lung function)
y.vect<-BJdata$FEV1

### Extract subjuect ID variable indicating repeated measures            
id.vect<-BJdata$SID        

### Extract microRNA data matrix   
M<-BJdata[,3:168]   

### Extract covariate data matrix       
COV<-BJdata[,170:179]
           
### In the example we use linear mixed-effect model (default) for sure independent screening, ranked by p-values
sis_LMM_par = sis(y.vect, id.vect, M, COV)

### If your computer have multiple cores, it is recommended to enable parallel option (default)
PGSfit = pgsfit(y.vect, id.vect, M, COV, sis_LMM_par, lambda.lim = c(3,5), pm.n = 12, pm.max = 120, seed = 1)

PGSfit        # print PGSfit summary
plot(PGSfit)  # plot cross-validation error grid
coef(PGSfit)  # return PGSfit coefficients

#For more information, please visit: https://github.com/YinanZheng/PGS/wiki/Example:-miRNA-expression-and-lung-function

}
\seealso{
see \code{\link{sis}} to obtain proper ranked variables; see \code{\link{pgsfit.obj}} for class methods.
}

